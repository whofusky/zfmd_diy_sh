#!/bin/bash
#
#############################################################################
#author       :    fushikai
#date         :    20200730
#linux_version:    Red Hat Enterprise Linux Server release 6.7
#dsc          :
#    查看scada新版配置文件中某个通道配置的算法、点地址进行筛选展示(需要在root下执行)
#    
#revision history:
#       fushikai@20200730_16:52@created@v0.0.0.1
#       
#
#############################################################################

headStr="物理量|计算方法|点地址|did名称|(ax+b)中的乘法系数a|(ax+b)中的偏移量b"

function F_Tips()
{
    local cmd="$1"
    echo -e "\nInput \e[1;31mERROR\e[0m please input like:"
    echo -e "\t${cmd} <\e[0;31m通道号\e[0m> <scada_cfg_file> [\"orderby=0|1\"]\t#查看某个通道的:${headStr}"
    echo -e "\t或者"
    echo -e "\t${cmd} <\e[0;31m通道号\e[0m> <scada_cfg_file> <\"didname=\"> [\"orderby=0|1\"]\t#查看某个通道中didName符合要求的:${headStr}"
    echo -e "\t或者"
    echo -e "\t${cmd} <\e[0;31m通道号\e[0m> <scada_cfg_file> <\"addr=\"> [\"orderby=0|1\"]\t#查看某个通道中remoteAddr符合要求的:${headStr}"
    echo -e "\t或者"
    echo -e "\t${cmd} <\e[0;31m通道号\e[0m> <scada_cfg_file> <\"cal=\"> [\"orderby=0|1\"]\t#查看某个通道中calcMethd符合要求的:${headStr}"
    echo -e "\t或者"
    echo -e "\t${cmd} <\e[0;31m通道号\e[0m> <scada_cfg_file> <\"mul=><\"> [\"orderby=0|1\"]\t#查看某个通道中multiplier factor(即ax+b中的a)符合要求的:${headStr}"
    echo -e "\t或者"
    echo -e "\t${cmd} <\e[0;31m通道号\e[0m> <scada_cfg_file> <\"offset=><\"> [\"orderby=0|1\"]\t#查看某个通道中offset(即ax+b中的a)符合要求的:${headStr}"
    echo -e "\n\t其中orderby是可选项,0:按phyType升序排列;1:按addr升序排序"
    echo -e "\n"
    return 0
}
function F_Tips2() {
    echo -e "\n\t第3个参数需要是: \e[1;31mdidanme=\"\" 或 addr=\"\" 或 cal=\"\" 或 mul[=><]\"\" 或 offset[=><]\"\" 或 orderby=\"\"\e[0m \n"
    return 0
}

function F_Tips3()
{
    echo -e "\n\t第3个参数如果是\e[1;31maddr=\"\" 或 cal=\"\" 或 orderby=\"\"\e[0m 等号后的值需要是数字 \n"
    return 0
}

function F_rmExistFile() #Delete file if file exists
{
    local tInParNum=1
    if [ ${tInParNum} -gt  $# ];then
        echo -e "\n\t\e[1;31mERROR:\e[0m functon ${FUNCNAME} input parameter num less than  [${tInParNum}]!\n"
        return 1
    fi

    local tFile="$1"
    while [ $# -gt 0 ]
    do
        tFile="$1"
        if [ -e "${tFile}" ];then
            #echo "rm -rf \"${tFile}\""
            rm -rf "${tFile}"
        fi
        shift
    done
    return 0
}

if [ $# -lt 2 ];then
    F_Tips "$0"
    exit 1
fi
tHostName="${HOSTNAME}"
tUid="$(id -u)"

#echo "tHostName=[${tHostName}],tUid=[${tUid}]"
#if [ ${tUid} -ne 0 ];then
#    echo -e "\n\t请在\e[1;31mroot\e[0m用户下执行\n"
#    exit 1
#fi

inParChlNo="$1"
tNumFlag=$(echo "${inParChlNo}"|sed -n '/^\s*[0-9]\+\s*$/p'|wc -l)
if [ ${tNumFlag} -lt 1 ];then
    F_Tips "$0"
    exit 1
fi

noPcfgFile="$2"

allFlag=0
fixdname="didname"
didFlag=0
fixadd="addr"
addFlag=0
fixcal="cal"
calFlag=0
fixorderby="orderby"
orderby=255
fixmul="mul"
fixofset="offset"
mulFlag=0
ofsetFlag=0

if [ $# -ge 3 ];then
    tmStr="$3"
    opName=$(echo "${tmStr}"|sed 's/\(^[^=><]*\)\([=><]*\)\([^=><]*\)/\1/')
    oprator=$(echo "${tmStr}"|sed 's/\(^[^=><]*\)\([=><]*\)\([^=><]*\)/\2/')
    opVal=$(echo "${tmStr}"|sed 's/\(^[^=><]*\)\([=><]*\)\([^=><]*\)/\3/')

    #echo -e "opName=[${opName}],oprator=[${oprator}],opVal=[${opVal}]"
    #opName=$(echo "${tmStr}"|cut -d'=' -f1)
    #opVal=$(echo "${tmStr}"|cut -d'=' -f2)

    if [[ "x${opName}" = "x${fixdname}" ]];then
        didFlag=1
        if [ "x${oprator}" != "x=" ];then
            F_Tips2
            exit 1
        fi
    elif [[ "x${opName}" = "x${fixadd}" ]];then
        addFlag=1
        if [ "x${oprator}" != "x=" ];then
            F_Tips2
            exit 1
        fi
        num=$(echo "${opVal}"|sed -n '/^[0-9]\+$/p'|wc -l)
        if [ ${num} -eq 0 ];then
            F_Tips3
            exit 1
        fi
    elif [[ "x${opName}" = "x${fixcal}" ]];then
        calFlag=1
        if [ "x${oprator}" != "x=" ];then
            F_Tips2
            exit 1
        fi
        num=$(echo "${opVal}"|sed -n '/^[0-9]\+$/p'|wc -l)
        if [ ${num} -eq 0 ];then
            F_Tips3
            exit 1
        fi
    elif [[ "x${opName}" = "x${fixorderby}" ]];then
        if [ "x${oprator}" != "x=" ];then
            F_Tips2
            exit 1
        fi
        orderby=${opVal}
        allFlag=1
    elif [[ "x${opName}" = "x${fixmul}" ]];then
        mulFlag=1
        if [[ "x${oprator}" != "x=" && "x${oprator}" != "x>=" && "x${oprator}" != "x<=" && "x${oprator}" != "x>" && "x${oprator}" != "x<" ]];then
            F_Tips2
            exit 1
        fi
        if [ "x${oprator}" = "x=" ];then
            oprator="=="
        fi
    elif [[ "x${opName}" = "x${fixofset}" ]];then
        ofsetFlag=1
        if [[ "x${oprator}" != "x=" && "x${oprator}" != "x>=" && "x${oprator}" != "x<=" && "x${oprator}" != "x>" && "x${oprator}" != "x<" ]];then
            F_Tips2
            exit 1
        fi
        if [ "x${oprator}" = "x=" ];then
            oprator="=="
        fi
    else
        F_Tips2
        exit 1
    fi
else
    allFlag=1
fi

if [[ ${didFlag} -eq 1 || ${calFlag} -eq 1 || ${addFlag} -eq 1  || ${mulFlag} -eq 1 || ${ofsetFlag} -eq 1 ]];then
    if [ $# -ge 4 ];then
        tmStr="$4"
        num=$(echo "${tmStr}"|sed -n '/=/p'|wc -l)
        if [ ${num} -eq 0 ];then
            F_Tips2
            exit 1
        fi
        orderName=$(echo "${tmStr}"|cut -d'=' -f1)
        if [[ "x${orderName}" != "x${fixorderby}" ]];then
            F_Tips2
            exit 1
        fi
        orderby=$(echo "${tmStr}"|cut -d'=' -f2)
    fi
fi

if [ ! -e "${noPcfgFile}" ];then
    echo -e "\n\t\e[1;31mERROR:\e[0m input file [ ${noPcfgFile} ] not exist!\n"
    exit 1
fi

num=$(echo "${orderby}"|sed -n '/^[0-9]\+$/p'|wc -l)
if [ ${num} -eq 0 ];then
    F_Tips3
    exit 1
fi

num=$(echo "${noPcfgFile}"|sed -n '/\//p'|wc -l)
if [ ${num} -eq 0 ];then
    tmpPDir="."
else
    tmpPDir="${noPcfgFile%/*}"
fi

#exeBinDir="$(dirname ${tLogDir})"
#edSrcFile="${exeBinDir}/${noPcfgFile}"
edSrcFile="${noPcfgFile}"

rtBinTmpDir="${tmpPDir}/scada_xd_tmp"
[ ! -d "${rtBinTmpDir}" ] && mkdir -p "${rtBinTmpDir}"
edName="${noPcfgFile%.*}_tmpDo_utf8.${noPcfgFile##*.}"
edFile="${rtBinTmpDir}/${edName}"

tMaxChnNo=$(sed -n '/^\s*<\s*channel\b/p' "${edSrcFile}"|wc -l)

if [ ${inParChlNo} -ge ${tMaxChnNo} ];then
    echo -e "\n\t通道号 [ ${inParChlNo} ] 在[ ${noPcfgFile} ]中不存在\n"
    exit 1
fi
for ((i=0;i<${tMaxChnNo};i++))
do
    tmpChlFile[$i]="${rtBinTmpDir}/tmpChl_${i}.txt"
done
awkCmdFile="${rtBinTmpDir}/cmd.awk"


function F_touchUtfF()
{
    if [ -e "${edFile}" ];then
        local srcMt="$(stat --format=%Y ${edSrcFile})"
        local tmpMt="$(stat --format=%Y ${edFile})"
        local todoFlag=$(echo "${srcMt} < ${tmpMt}"|bc)

        #临时文件的修改时间要比配置文件新则不需要重新生成临时文件
        if [ ${todoFlag} -eq 1 ];then
            return 0
        fi
        F_rmExistFile "${edFile}"
    fi
    local tcharset=$(file --mime-encoding ${edSrcFile} |awk  '{print $2}')
    tcharset="${tcharset%%-*}" 

    if [ "${tcharset}" == "iso" ];then
        which iconv &>/dev/null
        local retStat=$?
        if [ ${retStat} -ne 0 ];then
            echo -e "\n\t\e[1;31mERROR:\e[0m The iconv tool is not installed on this system !\n"
            exit 1
        fi
        iconv -f gbk -t utf8 "${edSrcFile}" -o "${edFile}"
    else
        cp "${edSrcFile}" "${edFile}"
    fi

    #将[ $edFile ] 文件通道中的<algorithmGoal></algorithmGoal>节点删除以便后面分析\n"
    #sed -i '/^\s*<\s*algorithmGoal\s*>/,/^\s*<\s*\/\s*algorithmGoal\s*>/ d' ${edFile}

    return 0
}

function F_touchChlx()
{
    if [ ! -e "${edFile}" ];then
        echo -e "\n\t\e[1;31mERROR:\e[0m file [ ${edFile} ] not exits!\n"
        exit 1
    fi

    local tmpFx="${tmpChlFile[${inParChlNo}]}"
    #tmpChlFile
    if [ -e "${tmpFx}" ];then
        local tmpMx="$(stat --format=%Y ${tmpFx})"
        local tmpMt="$(stat --format=%Y ${edFile})"
        local todoFlag=$(echo "${tmpMx} > ${tmpMt}"|bc)

        #临时文件的修改时间要比配置文件新则不需要重新生成临时文件
        if [ ${todoFlag} -eq 1 ];then
            return 0
        fi
        F_rmExistFile "${tmpFx}"
    fi

    echo -e "\n\t正在更新通道[ ${inParChlNo} ] 需要的配置文件,\e[1;31m可能需要些许时间\e[0m，请稍候!\n"

    sed -n "/^\s*<\s*channel\b.*chnNum\s*=\s*\"\s*${inParChlNo}\s*\"/,/^\s*<\s*\/\s*channel\b/ {/\(^\s*<\s*[\/]*\s*algorithmGoal\b\|^\s*<\s*[\/]*\s*phyObjVal\b\|^\s*<\s*pntAddr\b\|^\s*<\s*dataId\b\)/p;/^\s*<\s*\/\s*channel\b/q}" ${edFile}|sed 's/\(\s\+=\s*\|=\s\+\)/=/g'|awk -F'"' 'BEGIN{
    phyVal="";calVal="";scalVal="1";offsetVal="0";adds="";didName="";haveAlgFlag=0;    
    }
    {
        if ( $0 ~/^ *< *algorithmGoal *> */ ){
            haveAlgFlag=1;
        }
        else if ( $0 ~/^ *< *\/ *algorithmGoal *> */ ){
            haveAlgFlag=0;
        }
        for(i=1;i<=NF;i++){
            if ( $0 ~/^ *< *phyObjVal +/ ){
                if($i ~/ +phyType *=/){
                    phyVal=$(i+1);
                }
                else if($i ~/ +calcMethd *=/){
                    calVal=$(i+1);
                }
                else if($i ~/ +scalFactor *=/){
                    scalVal=$(i+1);
                }
                else if($i ~/ +offsetCoe *=/){
                    offsetVal=$(i+1);
                }
            }
            else if($0 ~/^ *< *pntAddr +/ && $i ~/ +remoteAddr *=/){
                adds=adds $(i+1) ",";break;
            }
            else if(haveAlgFlag == 0 && $0 ~/^ *< *dataId +/ && $i ~/ +didName *=/){
                didName=$(i+1);break;
            }
            else if($0 ~/^ *< *\/ *phyObjVal *> */){
                printf "%s|%s|%s|%s|%s|%s\n",phyVal,calVal,adds,didName,scalVal,offsetVal;
                phyVal="";calVal="";didName="";adds="";scalVal="1";offsetVal="0";haveAlgFlag=0;break;
            }
        }
    }'|sed 's/,\s*|/|/g'>"${tmpFx}"

    #echo "tmpFx=[${tmpFx}]"
    echo -e "\n\t更新通道[ ${inParChlNo} ] 需要的配置文件,\e[1;31m完成\e[0m!\n"

    return 0
}


F_touchUtfF
F_touchChlx

function F_prtSome()
{
    local tmpFx="${tmpChlFile[${inParChlNo}]}"
    if [ ! -e "${tmpFx}" ];then
        echo -e "\n\t file [ ${tmpFx} ] not exist!\n"
        return 0
    fi
    local cmdStr=""
    local fieldNo=0
    local prtNo='$0'

    if [ ${allFlag} -eq 1 ];then
        cmdStr="cat ${tmpFx}"
    elif [ ${didFlag} -eq 1 ];then
        fieldNo='$4'
        echo "{if(${fieldNo} ~/${opVal}/){print ${prtNo};}}">${awkCmdFile}
        cmdStr="awk -F| -f ${awkCmdFile} ${tmpFx}"
    elif [ ${addFlag} -eq 1 ];then
        fieldNo='$3'
        echo "{if(${fieldNo} ~/(^|,)${opVal}($|,)/){print ${prtNo};}}">${awkCmdFile}
        cmdStr="awk -F| -f ${awkCmdFile} ${tmpFx}"
    elif [ ${calFlag} -eq 1 ];then
        fieldNo='$2'
        echo "{if(${fieldNo} ~/(^|,)${opVal}($|,)/){print ${prtNo};}}">${awkCmdFile}
        cmdStr="awk -F| -f ${awkCmdFile} ${tmpFx}"
    elif [ ${mulFlag} -eq 1 ];then
        fieldNo='$5'
        echo "{if(${fieldNo} ${oprator} ${opVal}){print ${prtNo};}}">${awkCmdFile}
        cmdStr="awk -F| -f ${awkCmdFile} ${tmpFx}"
    elif [ ${ofsetFlag} -eq 1 ];then
        fieldNo='$6'
        echo "{if(${fieldNo} ${oprator} ${opVal}){print ${prtNo};}}">${awkCmdFile}
        cmdStr="awk -F| -f ${awkCmdFile} ${tmpFx}"
    else
        echo -e "\n\tline:${LINENO};func:${FUNCNAME}; logic ERROR\n"
        exit 1
    fi

    
    echo -e "\n\e[1;31m${headStr}\e[0m\n"
    if [ ${orderby} -eq 0 ];then
        ${cmdStr}|sort -t'|' -k1n,1
    elif [ ${orderby} -eq 1 ];then
#        ${cmdStr}|sort -t'|' -k3n,3 -k2n,2 -k1n,1 |awk -F'|' '{
#        if(NR==1){ 
#            preAddr=$3; 
#            curAddr=$3;
#            inum=1;
#            predif=0;
#        }
#        else{
#            curAddr=$3;
#            if( preAddr == curAddr){
#                inum++;
#            }
#            else{
#                preAddr=$3; 
#                if(inum >= 2 ){print "--------------------";predif=1;}
#                else if(predif == 1){print "--------------------";predif=1;}
#                inum=1;
#            }
#        }
#        print $0;
#    }'
        ${cmdStr}|sort -t'|' -k3n,3 -k2n,2 -k1n,1 |awk -F'|' '{
        if(NR==1){ 
            preAddr=$3; 
            curAddr=$3;
        }
        else{
            curAddr=$3;
            if( preAddr != curAddr){
                preAddr=$3; 
                print "--------------------";
            }
        }
        print $0;
    }'

    else
        ${cmdStr}
    fi
    echo -e "\n"
    return 0
}

F_prtSome

exit 0

